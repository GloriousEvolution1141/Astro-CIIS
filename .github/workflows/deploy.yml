name: Deploy to Production

on:
  push:
    branches:
      - pre-production

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' 

      - name: Install dependencies
        run: npm install

      - name: Instalar restructure (fix temporal pra el build)
        run: npm install restructure

      - name: Create .env file
        run: |
          echo "PUBLIC_DOMAIN_BASE=${{ secrets.PUBLIC_DOMAIN_BASE }}" >> .env
          
      - name: Build project
        run: npm run build

      - name: Instalar restructure (fix temporal pra el build)
        run: npm uninstall restructure

      - name: Prepare deployment folder
        run: |
          mkdir deploy-dir
          cp -r dist/* deploy-dir/

      - name: Switch to production branch (create if needed)
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch origin production || true

          # DESCARTAR cambios no commiteados
          git reset --hard
      
          if git ls-remote --exit-code --heads origin production; then
            git checkout -B production origin/production
          else
            git switch --orphan production
            git rm -rf . || true
          fi

      - name: Clear old contents and copy new
        run: |
          find . -mindepth 1 -maxdepth 1 ! -name 'deploy-dir' ! -name '.git' -exec rm -rf {} +
          cp -r deploy-dir/. .
          rm -rf deploy-dir

      - name: Commit and push to production
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          MAIN_COMMIT=$(git rev-parse origin/pre-production)
          COMMIT_URL="https://github.com/${{ github.repository }}/commit/$MAIN_COMMIT"
          COMMIT_MSG="Deploy to production - based on commit: $COMMIT_URL"
          git commit -m "$COMMIT_MSG" || echo "Nothing to commit"
          git push origin production --force
